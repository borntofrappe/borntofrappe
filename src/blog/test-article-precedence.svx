---
title: Test Article Precedence
description: A test article to experiment with two articles having the same day.
date: 2021 4 14 1
tags: js, puzzle
---

Here's the dealio. This article should precede _Test Article 4_. They have the same day, and the order depends on the order with which the articles are picked up by vite (alphabetically).

However, since I spread the components of the date when sorting the posts, it is possible to differentiate the dates through the number of hours, minutes, seconds. If necessary, of course.

```js
posts
  .sort((a, b) => new Date(...b.date.split('-').map(d => parseInt(d, 10))) - new Date(...a.date.split('-').map(d => parseInt(d, 10))))
```

All that is necessary to have this article take precedence is specifying an hour.

```diff
date: '2021-4-14'
+date: '2021-4-14-1'
```


Here's an interesting factoid about the expression. With arguments, the month value should be in the `[0, 11]` range. However, in the string, the month of December will be represented by `12`. It is not necessary to adjust the expression, however, as JavaScript will adjust the value itself.

```js
new Date(2021, 11, 2); // 2nd December 2021
new Date(2021, 12, 2); // 2nd January 2022
```

Since I care only about the order, the expression retains its value.

## Update

I can actually simplify the process by removing the quotes and replacing the hyphen `-` separator in favor of whitespace ` `.

```text
date: 2021 4 14 1
```

Removing the quotes with the hyphen would result in `mdsvex` picking up the value as a date object, since `2021-4-14` is a valid date format. This is why at first I decided to wrap the notation in quotes, to forcedly use the value as a string.

With whitespace, the field is already interpreted as a string. All that is necessary is to update how the components of the date are retrieved.

```js
date.split(' ')
```

Neat-o.