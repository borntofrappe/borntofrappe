---
title: Missing definition
description: Connection between custom elements and standard HTML nodes.
date: 2024-04-23
---

<script>
	import { onMount } from 'svelte';

	onMount(() => {
		if (customElements && !customElements.get('toggle-button')) {
			class ToggleButton extends HTMLButtonElement {
				constructor() {
					super();
				}

				connectedCallback() {
					this.setAttribute('role', 'switch');
					this.setAttribute('aria-checked', 'false');

					this.addEventListener('click', () => {
						const checked = this.getAttribute('aria-checked') === 'true';
						this.setAttribute('aria-checked', !checked);
					});
				}
			}

			customElements.define('toggle-button', ToggleButton, {
				extends: 'button'
			});
		}
	});
</script>

```css
:not(:defined) {
	display: none;
}
```

<!-- svelte-ignore avoid-is -->
<button aria-label="Pointless toggle" style="--toggle-color: hsl(210 16% 93%); --toggle-background: hsl(210 10% 23%); --toggle-outline: hsl(210 10% 23%)" is="toggle-button">
    <span>on</span>
    <span>off</span>
</button>

<style>
	:global([is='toggle-button']:not(:defined)) {
		display: none;
	}

	:global([is='toggle-button']) {
		--_color: var(--toggle-color, hsl(0 0% 90%));
		--_background: var(--toggle-background, hsl(0 0% 20%));
		--_outline: var(--toggle-outline, hsl(0 0% 20%));
		font-family: inherit;
		font-size: 1rem;
		font-weight: 700;
		text-transform: uppercase;
		color: var(--_color);
		background: var(--_background);
		padding: 0.25rem;
		border: none;
		border-radius: 1e5px;
	}

	:global([is='toggle-button'] > span) {
		display: inline-block;
		padding: 0.25rem 0.5rem;
		border-radius: inherit;
	}

	:global([is='toggle-button']:focus-visible) {
		outline: 2px solid var(--_outline);
		outline-offset: 2px;
	}

	:global([is='toggle-button'][aria-checked='true'] span:first-child) {
		color: var(--_background);
		background: var(--_color);
	}

	:global([is='toggle-button'][aria-checked='false'] span:last-child) {
		color: var(--_background);
		background: var(--_color);
	}
</style>
