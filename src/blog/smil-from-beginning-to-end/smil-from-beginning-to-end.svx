---
title: SMIL from beginning to end
description: Animate vector graphics over and over. And without repeating yourself.
date: 2023-03-29T21:59:53
---

<script>
	import Center from '$lib/components/blog/Center.svelte';

	import svg from './svg.js';
	import Rope from './Rope.svelte';
	import Jump from './Jump.svelte';
	import JumpTheRope from './JumpTheRope.svelte';
</script>

In the context of SMIL animations the `begin` attribute makes for [quite entertaining demos](/press-enter-to-smile). Sure there are some values which don't seem to be supported by modern browsers, but with the ones we have, the possibilities are endless.

{@html svg['defs']}

Say you have a `<path>` element detailing a down-looking bezier curve.

```html
<path d="M 0 0 c 20 10 60 10 80 0" />
```

With the `<animate>` element you can update the `d` attribute to twist the curve in the opposite direction.

```html
<path d="M 0 0 c 20 10 60 10 80 0">
	<animate
		attributeName="d"
		dur="1s"
		values="
            M 0 0 c 20 10 60 10 80 0; 
            M 0 0 c 20 -10 60 -10 80 0; 
            M 0 0 c 20 10 60 10 80 0;
        "
	/>
</path>
```

Almost looks like a jumping rope, doesn't it? Especially on top of a stylish background.

<Center maxInlineSize="26rem">
	<Rope />
</Center>

Let's frame the visual with an horizon line and a charismatic figure looking for some exercise.

<Center maxInlineSize="26rem">
	{@html svg['jump-hero']}
</Center>

To take flight we rely on the `<animateTransform>` element, changing the y coordinate for the entire sprite.

```html
<g>
	<animateTransform
		attributeName="transform"
		type="translate"
		values="0 0; 0 -10; 0 0;"
		dur="0.7s"
	/>
	<!-- ...boxed hero -->
</g>
```

And with the `begin` attribute you can actually run the animation in sync with the rope.

1. detail the first animation with a specific string

   <!-- prettier-ignore -->
   ```html
    <path d="...">
        <animate
            id="rope"
            ...
        />
    </path>
    ```

2. point to the `id` attribute in the animation which follows

   <!-- prettier-ignore -->
   ```html
    <g>
        <animateTransform
            begin="rope.begin"
            ...
        />
    </g>
    ```

Undeniably cute.

<Center maxInlineSize="26rem">
	<Jump />
</Center>

## Repeat

Say the character is really energized and wants to keep moving. With the `repeatCount` attribute you can animate the rope a few more times.

<!-- prettier-ignore -->
```html
<path d="...">
    <animate
        repeatCount="3"
        ...
    />
</path>
```

Primed and ready to jump together?

<Center maxInlineSize="26rem">
	<Jump repeatCount="3" />
</Center>

The rope loops, but the character stops after the first lift. Don't take it personally, however. Our hero is following the instructions to the letter â€” and is not mad you didn't follow suit.

Consider when the `begin` attribute.

<!-- prettier-ignore -->
```html
<animateTransform
    begin="rope.begin"
    ...
/>
```

The first animation might repeat thrice, but begins only once.

Among the values for the now-popular attribute, you find a first solution in the `repeat` function. Small hiccup, however: the function refers to a different animation _and_ a specific iteration.

```html
<animateTransform
	begin="
        rope.begin; 
        rope.repeat(1);
        rope.repeat(2);
        rope.repeat(3);
    "
	...
/>
```

For the simple setup you may repeat the syntax as many times as necessary. If you were to jump without end, however, the solution becomes untenable.

<!-- prettier-ignore -->
```html
<path d="...">
    <animate
        repeatCount="indefinite"
        ...
    />
</path>
```

Just how to keep going?

## Repeat counts

The last snippet points to a first solution.

Remove the `begin` attribute and describe a separate animation. With the same duration and the same `repeatCount` attribute.

<!-- prettier-ignore -->
```html
<animateTransform 
    dur="1s" 
    repeatCount="indefinite" 
    ... 
/>
```

There are however, and at least, two issues with the approach:

1. the animations take the same time

   This might not bother you, and if you want the hero to jump faster, you can "cheat" by tinkering with the `values` attribute.

   Instead of going up and down.

   <!-- prettier-ignore -->
   ```html
   <animateTransform
        values="
            0 0; 
            0 -10; 
            0 0;
        "
        ...
   />
   ```

   Have the character jump, come back and stay put. Enough to give pause.

   <!-- prettier-ignore -->
   ```html
   <animateTransform
        values="
            0 0; 
            0 -10; 
            0 0;
            0 0;
            0 0;
        "
       ...
   />
   ```

2. the animations are independent of each other

   Again, this might be less of a crux for you, but there is no relation between the two. No synchronization.

## Repeat begin

Another solution goes back to the snippet causing the issue: jump as the first animation begins.

<!-- prettier-ignore -->
```html
<animateTransform
    begin="rope.begin"
    ...
/>
```

The trick is therefore devious and elementary: have the first animation begin, over and over. Have the first animation begin immediately _and_ when the very same ends.

<!-- prettier-ignore -->
```html
<animate
    id="rope"
    begin="0s; rope.end"
    ...
/>
```

There's only one question left: ready for some exercise? The animation might be compelling enough to really push you this time.

<Center maxInlineSize="26rem">
	<JumpTheRope />
</Center>
