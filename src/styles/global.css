*,
*::before,
*::after {
  box-sizing: border-box;
}

body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

img,
picture {
  display: block;
  max-inline-size: 100%;
}

input,
button,
textarea,
select {
  font: inherit;
}

@media (prefers-reduced-motion: no-preference) {
  html:focus-within {
    scroll-behavior: smooth;
  }
}

:root {
  --gray-0: hsl(210 17% 98%);
  --gray-1: hsl(210 17% 95%);
  --gray-2: hsl(210 16% 93%);
  --gray-3: hsl(210 14% 89%);
  --gray-4: hsl(210 14% 83%);
  --gray-5: hsl(210 11% 71%);
  --gray-6: hsl(210 7% 56%);
  --gray-7: hsl(210 9% 31%);
  --gray-8: hsl(210 10% 23%);
  --gray-9: hsl(210 11% 15%);
  --gray-10: hsl(214 14% 10%);
  --gray-11: hsl(216 16% 6%);
  --gray-12: hsl(210 40% 2%);

  --step--2: clamp(0.6944rem, 0.6577rem + 0.1836vw, 0.8rem);
  --step--1: clamp(0.8333rem, 0.7754rem + 0.2899vw, 1rem);
  --step-0: clamp(1rem, 0.913rem + 0.4348vw, 1.25rem);
  --step-1: clamp(1.2rem, 1.0739rem + 0.6304vw, 1.5625rem);
  --step-2: clamp(1.44rem, 1.2615rem + 0.8924vw, 1.9531rem);
  --step-3: clamp(1.728rem, 1.4799rem + 1.2407vw, 2.4414rem);
  --step-4: clamp(2.0736rem, 1.7334rem + 1.7011vw, 3.0518rem);
  --step-5: clamp(2.4883rem, 2.027rem + 2.3067vw, 3.8147rem);

  --space-3xs: clamp(0.25rem, 0.2283rem + 0.1087vw, 0.3125rem);
  --space-2xs: clamp(0.5rem, 0.4783rem + 0.1087vw, 0.5625rem);
  --space-xs: clamp(0.75rem, 0.7065rem + 0.2174vw, 0.875rem);
  --space-s: clamp(1rem, 0.9565rem + 0.2174vw, 1.125rem);
  --space-m: clamp(1.25rem, 1.1848rem + 0.3261vw, 1.4375rem);
  --space-l: clamp(1.5rem, 1.4348rem + 0.3261vw, 1.6875rem);
  --space-xl: clamp(2rem, 1.913rem + 0.4348vw, 2.25rem);
  --space-2xl: clamp(3rem, 2.8696rem + 0.6522vw, 3.375rem);
  --space-3xl: clamp(4rem, 3.8261rem + 0.8696vw, 4.5rem);

  --measure-s: 40ch;
  --measure-m: 60ch;
  --measure-l: 80ch;
}

body {
  font-size: var(--step-0);
  min-block-size: 100svb;
  line-height: 1.7;
}

:is(h1, h2, h3) {
  line-height: 1.1;
  text-wrap: balance;
}

h1 {
  font-size: var(--step-4);
  line-height: 1;
}

h2 {
  font-size: var(--step-2);
}

:is(h3, h4) {
  font-size: var(--step-1);
}

:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

:is(.link-underline, a:not([class])) {
  --_clr: var(--underline, gold);
  color: inherit;
  text-decoration: none;
  background: linear-gradient(to bottom, var(--_clr), var(--_clr)),
    linear-gradient(to bottom, currentColor, currentColor);
  background-size: 0% 0.2ex, 100% 0.2ex;
  background-repeat: no-repeat;
  background-position: 0% 100%;
  transition: background-size 0.2s;

  &:hover {
    background-size: 100% 0.2ex;
  }

  &:not(:hover) {
    background-position: 100% 100%, 0% 100%;
  }

  &:focus-visible {
    background: none;
    outline: 2px solid currentColor;
    outline-offset: 2px;
  }
}

pre {
  color: var(--text-code-fence, #cdd6f4);
  background: var(--surface-code-fence, #1e1e2e);
  tab-size: 2;
  line-height: 1.5;
  border-radius: var(--space-xs);
  padding: var(--space-s) var(--space-m);

  code {
    display: block;
    overflow-x: auto;
  }

  &[data-language] {
    padding-block-start: calc(var(--space-s) + 1em);
    position: relative;

    &::before {
      position: absolute;
      inset-inline-end: var(--space-m);
      inset-block-start: var(--space-2xs);
      content: attr(data-language);
      font-size: 0.95em;
      color: currentColor;
      color: oklch(from currentColor calc(l * 0.7) c h);
    }
  }
}

.stroke-text {
  color: var(--fill, #f1f5f8);
  -webkit-text-stroke: var(--stroke-width, 0.2em) var(--stroke, #102a42);
  paint-order: stroke;
}

.visually-hidden:not(:focus):not(:active) {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  inline-size: 1px;
  block-size: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
}
