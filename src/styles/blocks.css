:is(.link, a:not([class])) {
  --_primary-color: var(--primary-color, hotpink);
  color: inherit;
  text-decoration: none;
  background: linear-gradient(
      to bottom,
      var(--_primary-color),
      var(--_primary-color)
    ),
    linear-gradient(to bottom, currentColor, currentColor);
  background-size: 0% 0.2ex, 100% 0.2ex;
  background-repeat: no-repeat;
  background-position: 0% 100%;
  transition: background-size 0.2s;

  &:hover {
    background-size: 100% 0.2ex;
  }

  &:not(:hover) {
    background-position: 100% 100%, 0% 100%;
  }

  &:focus-visible {
    background: none;
    outline: 2px solid currentColor;
    outline-offset: 2px;
  }
}

hr:not([class]) {
  color: inherit;
  block-size: 2em;
  border: none;
  background: currentColor;
  background: oklch(from currentColor l c h / 0.5);
  -webkit-mask: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="-841.46 -35.72 1682.91 78.21"><path fill="black" stroke="black" stroke-linecap="round" stroke-linejoin="round" d="M 0 19 C -21.17 29.12 -21.17 29.12 -18.08 5.87 C -34.24 -11.13 -34.24 -11.13 -11.17 -15.38 C -0.01 -36 -0.01 -36 11.16 -15.38 C 34.23 -11.13 34.23 -11.13 18.07 5.87 C 21.16 29.12 21.16 29.12 0 19" /><path fill="none" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="4.5" d="M -839 0 -60 0 M 60 0 839 0" /></svg>');
  mask: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="-841.46 -35.72 1682.91 78.21"><path fill="black" stroke="black" stroke-linecap="round" stroke-linejoin="round" d="M 0 19 C -21.17 29.12 -21.17 29.12 -18.08 5.87 C -34.24 -11.13 -34.24 -11.13 -11.17 -15.38 C -0.01 -36 -0.01 -36 11.16 -15.38 C 34.23 -11.13 34.23 -11.13 18.07 5.87 C 21.16 29.12 21.16 29.12 0 19" /><path fill="none" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="4.5" d="M -839 0 -60 0 M 60 0 839 0" /></svg>');
  -webkit-mask-position: 50% 50%;
  mask-position: 50% 50%;
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
}

p > code {
  color: var(--text-1);
  background: var(--surface-1);
  display: inline-block;
  padding: 1px var(--space-2xs);
  border-radius: var(--space-2xs);
}

pre {
  tab-size: 2;
  line-height: 1.5;
  border-radius: var(--space-xs);
  padding: var(--space-s) var(--space-m);
}

pre code {
  display: block;
  overflow-x: auto;
}

pre[data-language] {
  padding-block-start: calc(var(--space-s) + 1em);
  position: relative;
}

pre[data-language]::before {
  position: absolute;
  inset-inline-end: var(--space-m);
  inset-block-start: var(--space-2xs);
  content: attr(data-language);
  font-size: 0.95em;
  color: currentColor;
  color: oklch(from currentColor calc(l * 0.7) c h);
}

table [align="left"] {
  text-align: start;
}

table [align="center"] {
  text-align: center;
}

table [align="right"] {
  text-align: end;
}

table:not([class]) {
  color: var(--text-1);
  background: var(--surface-1);
  border: 3px solid var(--surface-3);
  table-layout: fixed;
  inline-size: 100%;
  border-collapse: collapse;
}

table:not([class]) thead th {
  font-weight: 400;
  text-transform: capitalize;
  padding: var(--space-2xs);
}

table:not([class]) tbody td {
  padding: var(--space-2xs) var(--space-s);
}

table:not([class]) tbody tr:nth-of-type(odd) td {
  background: var(--surface-2);
}

:is(div, figure):has(> table:not([class])) {
  padding: 0;
  color: var(--text-1);
  background: var(--surface-1);
  border: 3px solid var(--surface-3);
  --border-radius: clamp(0px, calc(100vw - 100%) * 1e5, 1rem);
  border-radius: var(--border-radius);
}

:is(div, figure):has(> table:not([class])) table {
  color: inherit;
  background: none;
  border: none;
}

:is(div, figure):has(> table:not([class]))
  tbody
  tr:last-of-type
  td:first-of-type {
  border-end-start-radius: var(--border-radius);
}

:is(div, figure):has(> table:not([class]))
  tbody
  tr:last-of-type
  td:last-of-type {
  border-end-end-radius: var(--border-radius);
}
