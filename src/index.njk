{% set hasContent = true %}
{% set title = site.name %}
{% set description = site.description %}

{% extends "layouts/base.njk" %}

{% block style %}
  {% include "css/index.css" %}
{% endblock %}

{% block content %}
<header id="hero">
  <div>
    <h1 class="visually-hidden">
      borntofrappe
    </h1>
    <p>Welcome to my small corner on the web.<br/>This is where I save my journey as a:</p>
    <ul>
      <li>hopeful developer</li>
      <li>fledging designer</li>
      <li>long-distance runner</li>
    </ul>
  </div>

  {% set size = 450 %}
  {% set iconSize = 100 %}
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="-{{size / 2}} -{{size /
    2}} {{size}} {{size}}" width="400" height="400">
    <defs>
      <path id="path" d="M 0 -32 a 32 32 0 0 1 0 64 32 32 0 0 1 0 -64" />
      <path id="path-c" d="M 0 39 a 39 39 0 0 1 0 -78 39 39 0 0 1 0 78" />
      <path id="path-cc" d="M 0 47 a 47 47 0 0 0 0 -94 47 47 0 0 0 0 94" />

      <mask id="mask-text">
        <rect x="-50" y="-50" width="100" height="100" fill="hsl(0, 0%, 100%)" />
        <use href="#path" fill="hsl(0, 0%, 0%)" />
      </mask>
    </defs>

    <g class="borntofrappe">
      <g fill="none" stroke="currentColor" stroke-width="8" stroke-linecap="round" stroke-linejoin="round">
        <circle r="46" />
        <path d="M -10 -13 q 0 -8 -8 -10" stroke-dasharray="14.01 18.5" stroke-dashoffset="-4.5" />
        <path d="M -10 -13 h 15 a 8 8 0 0 1 0 16 h -4 h 4 a 10 10 0 0 1 0 20 h -15 v -36" stroke-dasharray="114.2 146.28" stroke-dashoffset="-9.145" />
      </g>
      <circle r="50" opacity="0" />
    </g>

    {%- for link in site.links %}
    <g transform="rotate({{(360 / loop.length) * loop.index0 }}) translate(0 -{{(size / 3)}}) rotate({{(360 / loop.length) * loop.index0  * -1}})">
        <a href="{{link.href}}" aria-labelledby="title-{{link.name}}" aria-describedby="desc-{{link.name}}">
          <title id="title-{{link.name}}">{{link.name}}</title>
          <desc id="desc-{{link.name}}">{{link.desc}}</desc>
          <g transform="translate(-{{size / 6}} -{{size / 6}})">
            <svg viewBox="-{{iconSize / 2}} -{{iconSize / 2}} {{iconSize}} {{iconSize}}" width="{{size / 3}}" height="{{size / 3}}">
                <use href="#path" stroke="currentColor" stroke-width="6" fill="none" />
                <g transform="rotate({{(360 / loop.length) * loop.index0}})" mask="url(#mask-text)">
                  <g class="text">
                    <text fill="currentColor" font-weight="bold" letter-spacing="1" text-anchor="middle" font-size="12" font-family="monospace">
                    {% set angle = (360 / loop.length) * loop.index0 %}
                    {% if angle > 90 and angle < 270 %}
                    <textPath href="#path-cc" startOffset="50%">
                        {{link.name}}
                      </textPath>
                    {% else %}
                      <textPath href="#path-c" startOffset="50%">
                        {{link.name}}
                      </textPath>
                    {% endif %}
                    </text>
                  </g>
                </g>

                <g transform="translate(-{{iconSize / 6}} -{{iconSize / 6}})">
                  {{icons[link.name] | replace("1em", iconSize / 3) | safe}}
                </g>

                <circle r="50" opacity="0" />
            </svg>
          </g>
        </a>
      </g>
    {% endfor -%}
  </svg>
</header>

<main id="content">
  <article id="getting-started">
    <h2 class="visually-hidden">Getting started</h2>
    <p>
      This website is in its infancy, but I hope you'll find something of
      value still. If you haven't checked it out already, might I suggest a
      visit to the blog?
    </p>
    <a href="/blog" class="relative">Explore articles</a>
  </article>

  <article id="about">
    <h2>Almost forgot</h2>
    <p>Name's <mark>Gabriele</mark>.</p>
    <p>Born and raised in Italy, I enjoyed a year in Germany, where I developed a lasting appreciation of the French language.</p>
    <p>Outside of VsCode, you'll find me running, nursing a cup of tea, or enjoying a dated video game.<br/>Depends on the season.</p>

    {% set colors = [
      'hsl(350, 100%, 8%)',
      'hsl(347, 100%, 19%)',
      'hsl(345, 95%, 27%)',
      'hsl(345, 96%, 33%)',
      'hsl(342, 92%, 39%)',
      'hsl(340, 85%, 46%)',
      'hsl(340, 90%, 55%)',
      'hsl(339, 90%, 67%)',
      'hsl(336, 93%, 77%)',
      'hsl(335, 100%, 86%)',
      'hsl(330, 100%, 92%)'
    ] %}
    {% set satellites = ['world', 'editor', 'running', 'tea', 'gaming'] %}
    <svg viewBox="-50 -50 100 50" width="400" height="200">
      <defs>
        <clipPath id="clip-planet">
          <circle r="30" />
        </clipPath>

        <mask id="mask-satellites">
          <rect x="-50" y="-50" width="100" height="100" fill="hsl(0, 0%, 100%)" />
          <g fill="hsl(0, 0%, 0%)">
            <g class="rotate">
              {%- for satellite in satellites %}
                <g transform="rotate({{(360 / loop.length) * loop.index0}}) translate(0 -42)">
                  <circle r="7.5" />
                </g>
              {% endfor -%}
            </g>
          </g>
        </mask>
      </defs>

      <g clip-path="url(#clip-planet)">
        <g transform="translate(0 -70)">
          {%- for color in colors %}
            <g transform="scale({{1 - (0.65 / loop.length) * loop.index0}})">
              <ellipse style="color: {{color}}; color: var(--primary-{{loop.index0}});" fill="currentColor" stroke="none" cx="0" cy="70" rx="{{35 + (15 / loop.length) * loop.index0}}" ry="33"  />
            </g>
          {% endfor -%}
        </g>
      </g>
      
      <circle style="color: {{colors[loop.length - 1]}}; color: var(--grey-10);" fill="none" stroke="currentColor" stroke-width="0.2" r="30" />

      <g mask="url(#mask-satellites)">
        <circle class="rotate" r="42" stroke-dasharray="1 2" stroke-linecap="round" fill="none" stroke="currentColor" stroke-width="0.5" />
      </g>

      <g class="rotate">
        {%- for satellite in satellites %}
          <g transform="rotate({{(360 / loop.length) * loop.index0 * -1}}) translate(0 -42) rotate({{(360 / loop.length) * loop.index0}})">
            <g transform="scale(-1 1)">
              <g class="rotate">
                <g transform="scale(-1 1)">
                  <circle fill="none" stroke="currentColor" stroke-width="1" r="7.5" />
                  <g transform="translate(-4 -4)">
                    {{ icons[satellite] | replace("1em", 8) | safe }}
                  </g>
                </g>
              </g>
            </g>
          </g>
        {% endfor -%}
      </g>
    </svg>
  </article>
</main>
{% endblock %}


{% block script %}
  <script>
    if (window.IntersectionObserver) {
      const articles = document.querySelectorAll('article');
      const prefersReducedMotion = window.matchMedia(
        '(prefers-reduced-motion: reduce)'
      );
      const observer = new IntersectionObserver(entries => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('observed');
          } else {
            entry.target.classList.remove('observed');
          }
        });
      });

      if (!prefersReducedMotion.matches) {
        articles.forEach(article => {
          observer.observe(article);
        });
      }
      prefersReducedMotion.addListener(({ matches }) => {
        if (matches) {
          articles.forEach(article => {
            observer.unobserve(article);
          });
        } else {
          articles.forEach(article => {
            observer.observe(article);
          });
        }
      });
    }
  </script>
{% endblock %}