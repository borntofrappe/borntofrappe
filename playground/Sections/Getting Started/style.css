/* force vertical scroll */
body {
  padding-top: 120vh;
}

article {
  max-width: 40rem;
  margin: 1rem auto;
  width: 90vw;
}

article {
  font-size: 1.2rem;
  font-size: calc(1rem + (1.2 - 1) * (100vw - 40rem) / (75 - 40));
}

@media (min-width: 75rem) {
  article {
    font-size: 1.2rem;
  }
}

@media (max-width: 40rem) {
  article {
    font-size: 1rem;
  }
}

article {
  display: flex;
  flex-wrap: wrap;
}
article > * + * {
  margin-top: 1rem;
}
article > svg:nth-of-type(1) {
  align-self: flex-end;
  width: 20%;
  height: auto;
}
article > svg:nth-of-type(2) {
  align-self: flex-start;
  width: 70%;
  height: auto;
  margin-left: auto;
}

article h2 {
  font-size: 2em;
}

article p {
  font-size: 1em;
  line-height: 1.75;
  font-family: "Source Code Pro", monospace;
}

article a {
  --transition-duration: 0.5s;
  font-family: "Maven Pro", sans-serif;
  font-weight: 600;
  font-size: 1.1em;
  text-decoration: none;
}

@supports (mask-size: 1.5em) or (-webkit-mask-size: 1.5em) {
  article a {
    display: inline-block;
    position: relative;
    --transition-duration: 0.5s;
    padding-bottom: 0.75em;
    margin-bottom: 0.75em;
    border: none;
  }
  article a:focus {
    background: none;
  }
  article a::before,
  article a::after {
    pointer-events: none;
    z-index: -5;
    content: "";
    position: absolute;
    top: 100%;
    background: currentColor;
    transition: transform 0.25s cubic-bezier(0.445, 0.05, 0.55, 0.95);
    transition: transform var(--transition-duration) var(--ease-in-out-sine);
  }

  article a::before {
    left: 0%;
    width: 100%;
    height: 2px;
    transform-origin: 0% 50%;
    transform: translate(0%, -50%) scaleX(0);
  }

  article a:hover::before,
  article a:focus::before {
    transform: translate(0%, -50%) scaleX(1);
  }

  article a::after {
    left: 50%;
    width: 100%;
    height: 1.5em;
    transform: translate(-50%, -50%);
    mask-image: url("data:image/svg+xml,%3Csvg aria-hidden='true' aria-focusable='false' xmlns='http://www.w3.org/2000/svg' viewBox='-50 -50 100 100' width='1em' height='1em'%3E%3Cg transform='scale(0.9)'%3E%3Cg fill='none' stroke='currentColor' stroke-linejoin='round' stroke-linecap='round'%3E%3Cg transform='rotate(90)'%3E%3Cpath stroke-width='8' d='M -0 -46 q 23 15 23 52 v 10 a 8 8 0 0 1 -8 8 h -30 a 8 8 0 0 1 -8 -8 v -10 q 0 -37 23 -52' /%3E%3Cg stroke-width='7'%3E%3Cpath d='M 23 6 h 2 a 12 12 0 0 1 12 12 v 6 h -21' /%3E%3Cpath transform='scale(-1 1)' d='M 23 6 h 2 a 12 12 0 0 1 12 12 v 6 h -21' /%3E%3Cpath d='M 0 24 c -10 5 -12 16 0 22.5 c 12 -6.5 10 -17.5 0 -22.5' /%3E%3Ccircle r='9' cy='-11' /%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
    -webkit-mask-image: url("data:image/svg+xml,%3Csvg aria-hidden='true' aria-focusable='false' xmlns='http://www.w3.org/2000/svg' viewBox='-50 -50 100 100' width='1em' height='1em'%3E%3Cg transform='scale(0.9)'%3E%3Cg fill='none' stroke='currentColor' stroke-linejoin='round' stroke-linecap='round'%3E%3Cg transform='rotate(90)'%3E%3Cpath stroke-width='8' d='M -0 -46 q 23 15 23 52 v 10 a 8 8 0 0 1 -8 8 h -30 a 8 8 0 0 1 -8 -8 v -10 q 0 -37 23 -52' /%3E%3Cg stroke-width='7'%3E%3Cpath d='M 23 6 h 2 a 12 12 0 0 1 12 12 v 6 h -21' /%3E%3Cpath transform='scale(-1 1)' d='M 23 6 h 2 a 12 12 0 0 1 12 12 v 6 h -21' /%3E%3Cpath d='M 0 24 c -10 5 -12 16 0 22.5 c 12 -6.5 10 -17.5 0 -22.5' /%3E%3Ccircle r='9' cy='-11' /%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
    mask-position: 0% 50%;
    -webkit-mask-position: 0% 50%;
    mask-size: 1.5em;
    -webkit-mask-size: 1.5em;
    mask-repeat: no-repeat;
    -webkit-mask-repeat: no-repeat;
  }
  article a:hover::after,
  article a:focus::after {
    transform: translate(50%, -50%);
  }
}

article > svg:nth-of-type(1) .rotate {
  transform: rotate(15deg);
  animation: rotate 10s cubic-bezier(0.445, 0.05, 0.55, 0.95) infinite alternate;
  animation: rotate 10s var(--ease-in-out-sine) infinite alternate;
  animation-play-state: paused;
}

article > svg:nth-of-type(2) .icon .scale {
  transform: scale(0.7);
  animation: scale 20s cubic-bezier(0.68, -0.5, 0.265, 1.55) infinite;
  animation: scale 20s var(--ease-in-out-back) infinite;
  animation-play-state: paused;
}

article > svg:nth-of-type(2) .icon .color,
article > svg:nth-of-type(2) .path .color {
  color: currentColor;
  animation: color 20s cubic-bezier(0.445, 0.05, 0.55, 0.95) infinite;
  animation: color 20s var(--ease-in-out-sine) infinite;
  animation-play-state: paused;
}

article > svg:nth-of-type(2) .icon:nth-of-type(2) .scale,
article > svg:nth-of-type(2) .icon:nth-of-type(2) .color,
article > svg:nth-of-type(2) .path:nth-of-type(1) .color {
  animation-delay: 0.5s;
}
article > svg:nth-of-type(2) .icon:nth-of-type(3) .scale,
article > svg:nth-of-type(2) .icon:nth-of-type(3) .color,
article > svg:nth-of-type(2) .path:nth-of-type(2) .color {
  animation-delay: 0.25s;
}
article > svg:nth-of-type(2) .icon:nth-of-type(4) .scale,
article > svg:nth-of-type(2) .icon:nth-of-type(4) .color,
article > svg:nth-of-type(2) .path:nth-of-type(3) .color {
  animation-delay: 0.75s;
}

article > svg:nth-of-type(1).observed .rotate,
article > svg:nth-of-type(2).observed .icon .scale,
article > svg:nth-of-type(2).observed .icon .color,
article > svg:nth-of-type(2).observed .path .color {
  animation-play-state: running;
}

@media (min-width: 40rem) {
  @supports (display: grid) {
    article {
      display: grid;
      flex-wrap: initial;
      grid-template-columns: 1fr 4fr;
      grid-column-gap: 2rem;
      grid-row-gap: 0.5rem;
    }
    article > * + * {
      margin-top: initial;
    }
    article > svg:nth-of-type(1) {
      grid-row: 2;
      align-self: end;
      width: 100%;
      height: auto;
    }
    article > svg:nth-of-type(2) {
      grid-column: 2;
      grid-row: 1;
      justify-self: end;
      align-self: initial;
      margin-left: initial;
      width: 100%;
      height: auto;
      max-width: 30rem;
    }

    article p,
    article a {
      grid-column: 2;
      justify-self: start;
    }

    article > svg:nth-of-type(1) .rotate {
      transform: rotate(30deg);
    }
  }
}

@keyframes rotate {
  30%,
  100% {
    transform: rotate(-15deg);
  }
}
@keyframes scale {
  10%,
  90% {
    transform: scale(1);
  }
}
@keyframes color {
  10%,
  90% {
    color: hsl(340, 85%, 46%);
  }
}
